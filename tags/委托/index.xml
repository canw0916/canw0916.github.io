<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>委托 - 标签 - 火山不火</title><link>https://canw0916.github.io/tags/%E5%A7%94%E6%89%98/</link><description>委托 - 标签 - 火山不火</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>canw0916@gmail.com (火山)</managingEditor><webMaster>canw0916@gmail.com (火山)</webMaster><lastBuildDate>Sun, 29 Jan 2023 01:20:34 +0800</lastBuildDate><atom:link href="https://canw0916.github.io/tags/%E5%A7%94%E6%89%98/" rel="self" type="application/rss+xml"/><item><title>C#基础提升系列——C#委托</title><link>https://canw0916.github.io/posts/2023/01/csharp%E5%A7%94%E6%89%98/</link><pubDate>Sun, 29 Jan 2023 01:20:34 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/csharp%E5%A7%94%E6%89%98/</guid><description>委托是类型安全的类，它定义了返回类型和参数的类型，委托类可以包含一个或多个方法的引用。可以使用lambda表达式实现参数是委托类型的方法。 委托 当需要把一个方法作为参数传递给另一个方法时，就需要使用委托</description></item></channel></rss>