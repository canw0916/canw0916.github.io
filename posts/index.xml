<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - 火山不火</title><link>https://canw0916.github.io/posts/</link><description>所有文章 | 火山不火</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>canw0916@gmail.com (火山)</managingEditor><webMaster>canw0916@gmail.com (火山)</webMaster><lastBuildDate>Sun, 29 Jan 2023 06:03:32 +0800</lastBuildDate><atom:link href="https://canw0916.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Test</title><link>https://canw0916.github.io/posts/2023/01/test/</link><pubDate>Sun, 29 Jan 2023 06:03:32 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/test/</guid><description></description></item><item><title>网络流行口头禅对应的英语口语表达!</title><link>https://canw0916.github.io/posts/2023/01/%E7%BD%91%E7%BB%9C%E6%B5%81%E8%A1%8C%E5%8F%A3%E5%A4%B4%E7%A6%85%E5%AF%B9%E5%BA%94%E7%9A%84%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E8%A1%A8%E8%BE%BE/</link><pubDate>Sun, 29 Jan 2023 01:52:26 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/%E7%BD%91%E7%BB%9C%E6%B5%81%E8%A1%8C%E5%8F%A3%E5%A4%B4%E7%A6%85%E5%AF%B9%E5%BA%94%E7%9A%84%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E8%A1%A8%E8%BE%BE/</guid><description>时下最in的话对应的英语口语表达，无论是日常交谈还是网友聊天中出现频率都可以称得上一级高的句子们，对应上英语了，潮人们说话当然也要潮咯。 我了个去：holy crap； 额滴个神啊：oh my god； 我的天哪：</description></item><item><title>德语干货 | 德语第一格总结</title><link>https://canw0916.github.io/posts/2023/01/%E5%BE%B7%E8%AF%AD%E5%B9%B2%E8%B4%A7-%E5%BE%B7%E8%AF%AD%E7%AC%AC%E4%B8%80%E6%A0%BC%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 29 Jan 2023 01:20:55 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/%E5%BE%B7%E8%AF%AD%E5%B9%B2%E8%B4%A7-%E5%BE%B7%E8%AF%AD%E7%AC%AC%E4%B8%80%E6%A0%BC%E6%80%BB%E7%BB%93/</guid><description>“格”在德语学习的过程中，地位十分重要。或者说，“格”应当被视为德语学习的灵魂所在。要精准地掌握德语，就必须先弄清楚“格”的不同用法。首先，我们得定义一下“格”，也就是什么是“格”。我的理解是，德语中</description></item><item><title>C#基础提升系列——C#特殊集合</title><link>https://canw0916.github.io/posts/2023/01/csharp%E7%89%B9%E6%AE%8A%E9%9B%86%E5%90%88/</link><pubDate>Sun, 29 Jan 2023 01:20:50 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/csharp%E7%89%B9%E6%AE%8A%E9%9B%86%E5%90%88/</guid><description>C# 特殊集合 C#中的特殊集合主要有： 不可变的集合 并发的集合 位数组合位矢量 可观察的集合 不变的集合 如果对象可以改变其状态，就很难在多个同时运行的任务中使用。这些集合必须同步。如果对象不能改变其状态，就很容易</description></item><item><title>C#基础提升系列——C#集合</title><link>https://canw0916.github.io/posts/2023/01/csharp%E9%9B%86%E5%90%88/</link><pubDate>Sun, 29 Jan 2023 01:20:46 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/csharp%E9%9B%86%E5%90%88/</guid><description>C#集合 有两种主要的集合类型：泛型集合和非泛型集合。 泛型集合被添加在 .NET Framework 2.0 中，并提供编译时类型安全的集合。 因此，泛型集合通常能提供更好的性能。 构造泛型集合时，它们接受类型形参；并在向该集合添加项或从该</description></item><item><title>C#基础提升系列——C#泛型</title><link>https://canw0916.github.io/posts/2023/01/csharp%E6%B3%9B%E5%9E%8B/</link><pubDate>Sun, 29 Jan 2023 01:20:40 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/csharp%E6%B3%9B%E5%9E%8B/</guid><description>C# 泛型(Generics) 泛型概述 泛型是C#编程语言的一部分，它与程序集中的IL(Intermediate Language，中间语言)代码紧密的集成。通过泛型，我们不必给不同的类型编写功能相同的许多方</description></item><item><title>C#基础提升系列——C#委托</title><link>https://canw0916.github.io/posts/2023/01/csharp%E5%A7%94%E6%89%98/</link><pubDate>Sun, 29 Jan 2023 01:20:34 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/csharp%E5%A7%94%E6%89%98/</guid><description>委托是类型安全的类，它定义了返回类型和参数的类型，委托类可以包含一个或多个方法的引用。可以使用lambda表达式实现参数是委托类型的方法。 委托 当需要把一个方法作为参数传递给另一个方法时，就需要使用委托</description></item><item><title>Git如何解除项目原来远程仓库的关联</title><link>https://canw0916.github.io/posts/2023/01/git%E5%A6%82%E4%BD%95%E8%A7%A3%E9%99%A4%E9%A1%B9%E7%9B%AE%E5%8E%9F%E6%9D%A5%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E8%81%94/</link><pubDate>Sun, 29 Jan 2023 01:20:27 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/git%E5%A6%82%E4%BD%95%E8%A7%A3%E9%99%A4%E9%A1%B9%E7%9B%AE%E5%8E%9F%E6%9D%A5%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E8%81%94/</guid><description>有时候我们需要将一个项目上传到另一个远程仓库，那么就需要解除原来的仓库关联。 1.首先切换到项目的根目录，查看项目原有的remote。 1 git remote -v 2.接下来就是接触与原来远程仓库的关联。 1 git remote rm “remot</description></item><item><title>IO流02</title><link>https://canw0916.github.io/posts/2023/01/io%E6%B5%8102/</link><pubDate>Sun, 29 Jan 2023 01:20:21 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/io%E6%B5%8102/</guid><description>1.字符流 1.1为什么会出现字符流【理解】 字符流的介绍 由于字节流操作中文不是特别的方便，所以Java就提供字符流 字符流 = 字节流 + 编码表 中文的字节存储方式 用字节流复制文本文件时，文本文件也会有中文，但是</description></item><item><title>IO流01</title><link>https://canw0916.github.io/posts/2023/01/io%E6%B5%8101/</link><pubDate>Sun, 29 Jan 2023 01:20:15 +0800</pubDate><author>火山</author><guid>https://canw0916.github.io/posts/2023/01/io%E6%B5%8101/</guid><description>1.File类 1.1File类概述和构造方法【应用】 File类介绍 它是文件和目录路径名的抽象表示 文件和目录是可以通过File封装成对象的 对于File而言,其封装的并不是一个真正存在的文件,仅仅是一个路</description></item></channel></rss>